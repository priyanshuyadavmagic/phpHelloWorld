name: PHP

on:
  push:
    branches:
      - "master"
  workflow_dispatch:
env:
  PHP_VERSION: '8.x'                 
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#       - name: Setup PHP
#         uses: shivammathur/setup-php@7c0b4c8c8ebed23eca9ec2802474895d105b11bc
#         with:
#           php-version: ${{ env.PHP_VERSION }}
#       - name: Check if composer.json exists
#         id: check_files
#         uses: andstor/file-existence-action@87d74d4732ddb824259d80c8a508c0124bf1c673
#         with:
#           files: 'composer.json'
#       - name: Get Composer Cache Directory
#         id: composer-cache
#         if: steps.check_files.outputs.files_exists == 'true'
#         run: |
#           echo "::set-output name=dir::$(composer config cache-files-dir)"
#       - name: Set up dependency caching for faster installs
#         uses: actions/cache@v3
#         if: steps.check_files.outputs.files_exists == 'true'
#         with:
#           path: ${{ steps.composer-cache.outputs.dir }}
#           key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-composer-
#       - name: Run composer install if composer.json exists
#         if: steps.check_files.outputs.files_exists == 'true'
#         run: composer validate --no-check-publish && composer install --prefer-dist --no-progress
      - name: zip creation
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'php.zip'
      - run: ls
      - run: pwd
      - name: 'Task 1: Connect to AWS '
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: 'Task 2: Upload  to S3 bucket'
        run: aws s3 cp php.zip s3://githubaction-php-app1
      - name: 'Testing '
        run : echo 'testing'
        
#   deploy: 
#      needs: build
#      runs-on: ubuntu-latest
#      steps:
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-south-1
#       - name: Deploy to AWS
#         run: 
#           aws deploy create-deployment --application-name github-php-app --deployment-group-name DG3 --s3-location bucket=githubaction-php-app,key=php.zip,bundleType=zip
